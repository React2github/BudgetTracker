<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>BudgetTracker</title>
    <link rel="stylesheet" href="/index" />
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
      integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="//cdn.jsdelivr.net/chartist.js/latest/chartist.min.css">
    <script src="//cdn.jsdelivr.net/chartist.js/latest/chartist.min.js"></script>

  </head>
  <body>
    <!--HEADER CONTENT-->
    <div class="jumbotron jumbotron-fluid">
      <div class="container">
        <h1 class="display-4">BudgetTracker</h1>
        
      </div>
      <form action='/logout?_method=DELETE' method='POST' class='main'>
        <button type='submit' class="btn btn-dark">LogOut</button>
        </form>
    </div>
    <div class="greeting">
      <!--USER FIELD WILL POPULATE WITH INFO FROM DATABASE.-->
      <h2>Hello, <%=name %>!</h2>
    </div>

    <div class="expenses">
      <h2>Your budget is <%=budgetAmount %> </h2>
      <h3>Your Monthly Bills</h3>
      <ul class="nav justify-content-end">
        <li class="nav-item">
          <a class="nav-link active" href="/expenses">View Weekly Expenses</a>
        </li>
    </div>
    

<div class="expenses-container">
  <div class="expenses-chart">
      <!--RENDER MONTHLY BILLS CHART. CAN ADJUST THE ASPECT RATIO AS NEEDED-->
      <div class="ct-chart ct-minor-sixth"></div>
  </div>
  
  <div class="expenses-list">
      <!--RENDER MONTHLY BILLS LIST-->
        <div id="billsForm">
          <form action="/submitBill" method="POST>
            <div class="form-group row">
              <label for="amount" class="col-sm-2 col-form-label">Amount</label>
              <div class="col-sm-10">
                <input type="integer" class="form-control" id="amount">
              </div>
            </div>
            <fieldset class="form-group">
              <div class="row">
                <legend class="col-form-label col-sm-2 pt-0">Radios</legend>
                <div class="col-sm-10">
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios1" value="option1" checked>
                    <label class="form-check-label" for="gridRadios1">
                      Rent/Mortgage
                    </label>
                  </div>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios2" value="option2">
                    <label class="form-check-label" for="gridRadios2">
                      Water
                    </label>
                  </div>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios3" value="option3">
                    <label class="form-check-label" for="gridRadios3">
                      Electricity/Gas
                    </label>
                  </div>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios3" value="option3">
                    <label class="form-check-label" for="gridRadios3">
                      Car
                    </label>
                  </div>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios3" value="option3">
                    <label class="form-check-label" for="gridRadios3">
                      Other
                    </label>
                  </div>
                </div>
              </div>
            </fieldset>
            <div class="form-group row">
              <div class="col-sm-10">
                <button type="submit" class="btn btn-primary" formmethod="POST">Submit</button>
              </div>
            </div>
          </form>
        </div>
  </div>
  </div>
    </body>
    
  
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>â€©
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js" integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI" crossorigin="anonymous"></script>
    </html>
  
//

app.get('/books', (req, res) => {

  const client = new Client();
  client.connect()
      .then(() => {
      return  client.query('SELECT * FROM public.books;');
      })
      .then((results) => {
          res.render('book-list', {
              books: results.rows 
          });
      })
      .catch((err) => {
          console.log('error', err);
          res.send('Something bad happened');
      });
  
  });
  
  app.get('/book/add', (req, res) => {
      res.render('book-form');
  });
  
  app.post('/book/add', (req, res) => {
      console.log('post body', req.body);
  
      const client = new Client();
      client.connect()
         .then(() => {
             const sql='INSERT INTO public.books (name, authors) VALUES ($1, $2)'
             const params=[req.body.title, req.body.authors];
         return client.query(sql, params);
   
         })
         .then((results) => {
          //    console.log('results?', results);
             res.redirect('/books');
         })
         .catch((err) => {
             console.log('error', err);
             res.send('Something bad happened')
         });
      });
  
      app.post('/book/delete/:id', (req, res) => {
        console.log('deleting id', req.params.id);
  
        const client = new Client();
        client.connect()
        .then(() => {
            const sql = 'DELETE FROM public.books WHERE bookid = $1;'
            const params = [req.params.id];
           return client.query(sql, params);
        })
        .then((results) => {
          console.log('delete results', results);
          res.redirect('/books')
        })
        .catch((err) => {
            console.log('err', err);
            res.redirect('/books');
        });
      });
  
  
      app.get('/book/edit/:id', (req, res) => {
        const client = new Client();
        client.connect()
        .then(() => {
            const sql="Select * from public.books where bookid = $1;"
            const params = [req.params.id];
            return client.query(sql, params);
        })
        .then((results) => {
  
          if(results.rowCount === 0) {
              res.redirect('/books');
              return;
          }
            res.render('book-edit', {
                book: results.rows[0]
            });
        })
      .catch((err) => {
          console.log('edit get err', err);
          res.redirect('/books');
      });
  });
  //